<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.samyang.winplus.sis.order.dao.PurchaseCloseDao">
	<select id="getSuprByPurchaseHeaderList" resultType="java.util.Map" parameterType="java.util.Map">
		/* getSuprByPurchaseHeaderList */
		SELECT
			CONVERT(NVARCHAR(10),CONVERT(DATE,A.PUR_DATE),23) AS YMD
			,A.ORGN_DIV_CD
			,A.ORGN_CD
			,A.SUPR_CD
			,A.CUSTMR_NM
			,A.PUR_DATE
			,CASE
				WHEN COUNT(A.BCD_CD) > 1 THEN CONCAT((SELECT BCD_NM FROM T_STD_MAST_BCD WHERE BCD_CD = MAX(A.BCD_CD)),' 외 ',(COUNT(A.BCD_CD)-1),'건')
				ELSE (SELECT BCD_NM FROM T_STD_MAST_BCD WHERE BCD_CD = MAX(A.BCD_CD))
			END AS TOT_GOODS_NM
			,SUM(A.SUPR_AMT) AS TOT_SUPR_AMT
			,SUM(A.VAT) AS TOT_VAT
			,SUM(A.PAY_SUM_AMT) AS TOT_PAY_SUM_AMT
			,A.CONF_TYPE
			,A.SEND_TYPE
			,SUM(A.CLSE_SUPR_AMT) AS CLSE_SUPR_AMT
			,SUM(A.CLSE_VAT) AS CLSE_VAT
			,SUM(A.CLSE_TOT_AMT) AS CLSE_TOT_AMT
			,(SUM(A.PAY_SUM_AMT) - SUM(A.CLSE_TOT_AMT)) AS CALC_AMT
			,SUM(A.TAXA_SUPR_AMT) AS TAXA_SUPR_AMT
			,SUM(A.TAXA_VAT) AS TAXA_VAT
			,SUM(A.TAXA_PAY_SUM_AMT) AS TAXA_PAY_SUM_AMT
			,SUM(A.FREE_SUPR_AMT) AS FREE_SUPR_AMT
		FROM (
			SELECT
				WINP.ORGN_DIV_CD
				,WINP.ORGN_CD
				,WINP.SUPR_CD
				,SMC.CUSTMR_NM
				,WINP.PUR_SLIP_CD
				,WINP.PUR_SLIP_SEQ
				,WINP.PUR_DATE
				,WINP.BCD_CD
				,WINP.SUPR_AMT
				,WINP.VAT
				,WINP.PAY_SUM_AMT
				,WINP.CONF_TYPE
				,WINP.SEND_TYPE
				,CUSTMR.CLSE_SUPR_AMT
				,CUSTMR.CLSE_VAT
				,CUSTMR.CLSE_TOT_AMT
				,WINP.TAXA_SUPR_AMT
				,WINP.TAXA_VAT
				,WINP.TAXA_PAY_SUM_AMT
				,WINP.FREE_SUPR_AMT
			FROM (
				SELECT
					PM.ORGN_DIV_CD
					,PM.ORGN_CD
					,PM.SUPR_CD
					,PM.PUR_SLIP_CD
					,PD.PUR_SLIP_SEQ
					,PM.PUR_DATE
					,PD.BCD_CD
					,(
						CASE
							WHEN PM.PUR_TYPE = 'P' THEN PD.SUPR_AMT * 1
							WHEN PM.PUR_TYPE = 'R' THEN PD.SUPR_AMT * -1
							ELSE 0
						END
					) AS SUPR_AMT
					,(
						CASE
							WHEN PM.PUR_TYPE = 'P' THEN PD.VAT * 1
							WHEN PM.PUR_TYPE = 'R' THEN PD.VAT * -1
							ELSE 0
						END
					) AS VAT
					,(
						CASE
							WHEN PM.PUR_TYPE = 'P' THEN PD.PAY_SUM_AMT * 1
							WHEN PM.PUR_TYPE = 'R' THEN PD.PAY_SUM_AMT * -1
							ELSE 0
						END
					) AS PAY_SUM_AMT
					,PM.CONF_TYPE
					,IFNULL(PM.SEND_TYPE,'N') AS SEND_TYPE
					,(
						CASE
							WHEN PM.PUR_TYPE = 'P' THEN (CASE WHEN IFNULL(PD.GOODS_TAX_YN,'N') = 'Y' THEN PD.SUPR_AMT * 1 ELSE 0 END)
							WHEN PM.PUR_TYPE = 'R' THEN (CASE WHEN IFNULL(PD.GOODS_TAX_YN,'N') = 'Y' THEN PD.SUPR_AMT * -1 ELSE 0 END)
							ELSE 0
						END
					) AS TAXA_SUPR_AMT
					,(
						CASE
							WHEN PM.PUR_TYPE = 'P' THEN (CASE WHEN IFNULL(PD.GOODS_TAX_YN,'N') = 'Y' THEN PD.VAT * 1 ELSE 0 END)
							WHEN PM.PUR_TYPE = 'R' THEN (CASE WHEN IFNULL(PD.GOODS_TAX_YN,'N') = 'Y' THEN PD.VAT * -1 ELSE 0 END)
							ELSE 0
						END
					) AS TAXA_VAT
					,(
						CASE
							WHEN PM.PUR_TYPE = 'P' THEN (CASE WHEN IFNULL(PD.GOODS_TAX_YN,'N') = 'Y' THEN PD.PAY_SUM_AMT * 1 ELSE 0 END)
							WHEN PM.PUR_TYPE = 'R' THEN (CASE WHEN IFNULL(PD.GOODS_TAX_YN,'N') = 'Y' THEN PD.PAY_SUM_AMT * -1 ELSE 0 END)
							ELSE 0
						END
					) AS TAXA_PAY_SUM_AMT
					,(
						CASE
							WHEN PM.PUR_TYPE = 'P' THEN (CASE WHEN IFNULL(PD.GOODS_TAX_YN,'N') = 'N' THEN PD.SUPR_AMT * 1 ELSE 0 END)
							WHEN PM.PUR_TYPE = 'R' THEN (CASE WHEN IFNULL(PD.GOODS_TAX_YN,'N') = 'N' THEN PD.SUPR_AMT * -1 ELSE 0 END)
							ELSE 0
						END
					) AS FREE_SUPR_AMT
				FROM T_PUR_MAST PM
				INNER JOIN T_PUR_DETL PD
				ON PM.ORGN_DIV_CD = PD.ORGN_DIV_CD
				AND PM.ORGN_CD = PD.ORGN_CD
				AND PM.PUR_SLIP_CD = PD.PUR_SLIP_CD
				WHERE PM.PUR_DATE BETWEEN #{searchDateFrom} AND #{searchDateTo}
				AND PM.ORGN_CD = #{ORGN_CD}
				<if test='SUPR_CD != null and SUPR_CD != ""'>
					AND PM.SUPR_CD = #{SUPR_CD}
				</if>
				AND PM.USE_YN = 'Y'
				AND PD.USE_YN = 'Y'
			) WINP
			LEFT OUTER JOIN (
				SELECT
					ORGN_CD
					,CUSTMR_CD
					,CLSE_SLIP_CD
					,CLSE_SLIP_SEQ
					,CLSE_SUPR_AMT
					,CLSE_VAT
					,CLSE_TOT_AMT
				FROM T_CLSE_CUSTMR_TMP CCT
				WHERE CCT.ORGN_CD = #{ORGN_CD}
				<if test='SUPR_CD != null and SUPR_CD != ""'>
					AND CCT.CUSTMR_CD = #{SUPR_CD}
				</if>
				AND CCT.PUR_SALE_TYPE = '1'
			) CUSTMR
			ON WINP.ORGN_CD = CUSTMR.ORGN_CD
			AND WINP.PUR_SLIP_CD = CUSTMR.CLSE_SLIP_CD
			AND WINP.PUR_SLIP_SEQ = CUSTMR.CLSE_SLIP_SEQ
			INNER JOIN T_STD_MAST_CUSTMR SMC
			ON WINP.SUPR_CD = SMC.CUSTMR_CD
		) A
		GROUP BY A.ORGN_DIV_CD,A.ORGN_CD,A.SUPR_CD,A.CUSTMR_NM,A.PUR_DATE,A.CONF_TYPE,A.SEND_TYPE
	</select>
	
	<select id="getSuprByPurchaseDetailList" resultType="java.util.Map" parameterType="java.util.Map">
		/* getSuprByPurchaseDetailList */
		SELECT
			WINP.ORGN_CD
			,WINP.SUPR_CD
			,WINP.PUR_DATE
			,WINP.PUR_SLIP_CD
			,WINP.PUR_SLIP_SEQ
			,CONCAT(WINP.PUR_SLIP_CD,'_',WINP.PUR_SLIP_SEQ) AS UNI_KEY
			,WINP.BCD_CD
			,WINP.BCD_NM
			,WINP.DIMEN_NM
			,WINP.PUR_PRICE
			,WINP.PUR_QTY
			,WINP.SUPR_AMT
			,WINP.VAT
			,WINP.PAY_SUM_AMT
			,WINP.GOODS_TAX_YN
			,CUSTMR.CLSE_PRICE
			,CUSTMR.CLSE_QTY
			,CUSTMR.CLSE_SUPR_AMT
			,CONVERT(NVARCHAR,CAST(CUSTMR.CLSE_VAT AS INT)) AS CLSE_VAT
			,CUSTMR.CLSE_TOT_AMT
			,IFNULL(CUSTMR.CONF_TYPE,'N') AS CONF_TYPE
			,WINP.TAXA_SUPR_AMT
			,WINP.TAXA_VAT
			,WINP.TAXA_PAY_SUM_AMT
			,WINP.FREE_SUPR_AMT
		FROM (
			SELECT
				PM.ORGN_CD
				,PM.SUPR_CD
				,PM.PUR_DATE
				,PM.PUR_SLIP_CD
				,PD.PUR_SLIP_SEQ
				,PD.BCD_CD
				,SMB.BCD_NM
				,SMB.DIMEN_NM
				,PD.PUR_PRICE
				,PD.PUR_QTY
				,(
					CASE
						WHEN PM.PUR_TYPE = 'P' THEN PD.SUPR_AMT * 1
						WHEN PM.PUR_TYPE = 'R' THEN PD.SUPR_AMT * -1
						ELSE 0
					END
				) AS SUPR_AMT
				,(
					CASE
						WHEN PM.PUR_TYPE = 'P' THEN PD.VAT * 1
						WHEN PM.PUR_TYPE = 'R' THEN PD.VAT * -1
						ELSE 0
					END
				) AS VAT
				,(
					CASE
						WHEN PM.PUR_TYPE = 'P' THEN PD.PAY_SUM_AMT * 1
						WHEN PM.PUR_TYPE = 'R' THEN PD.PAY_SUM_AMT * -1
						ELSE 0
					END
				) AS PAY_SUM_AMT
				,PD.GOODS_TAX_YN
				,(
					CASE
						WHEN PM.PUR_TYPE = 'P' THEN (CASE WHEN IFNULL(PD.GOODS_TAX_YN,'N') = 'Y' THEN PD.SUPR_AMT * 1 ELSE 0 END)
						WHEN PM.PUR_TYPE = 'R' THEN (CASE WHEN IFNULL(PD.GOODS_TAX_YN,'N') = 'Y' THEN PD.SUPR_AMT * -1 ELSE 0 END)
						ELSE 0
					END
				) AS TAXA_SUPR_AMT
				,(
					CASE
						WHEN PM.PUR_TYPE = 'P' THEN (CASE WHEN IFNULL(PD.GOODS_TAX_YN,'N') = 'Y' THEN PD.VAT * 1 ELSE 0 END)
						WHEN PM.PUR_TYPE = 'R' THEN (CASE WHEN IFNULL(PD.GOODS_TAX_YN,'N') = 'Y' THEN PD.VAT * -1 ELSE 0 END)
						ELSE 0
					END
				) AS TAXA_VAT
				,(
					CASE
						WHEN PM.PUR_TYPE = 'P' THEN (CASE WHEN IFNULL(PD.GOODS_TAX_YN,'N') = 'Y' THEN PD.PAY_SUM_AMT * 1 ELSE 0 END)
						WHEN PM.PUR_TYPE = 'R' THEN (CASE WHEN IFNULL(PD.GOODS_TAX_YN,'N') = 'Y' THEN PD.PAY_SUM_AMT * -1 ELSE 0 END)
						ELSE 0
					END
				) AS TAXA_PAY_SUM_AMT
				,(
					CASE
						WHEN PM.PUR_TYPE = 'P' THEN (CASE WHEN IFNULL(PD.GOODS_TAX_YN,'N') = 'N' THEN PD.SUPR_AMT * 1 ELSE 0 END)
						WHEN PM.PUR_TYPE = 'R' THEN (CASE WHEN IFNULL(PD.GOODS_TAX_YN,'N') = 'N' THEN PD.SUPR_AMT * -1 ELSE 0 END)
						ELSE 0
					END
				) AS FREE_SUPR_AMT
			FROM T_PUR_MAST PM
			INNER JOIN T_PUR_DETL PD
			ON PM.ORGN_DIV_CD = PD.ORGN_DIV_CD
			AND PM.ORGN_CD = PD.ORGN_CD
			AND PM.PUR_SLIP_CD = PD.PUR_SLIP_CD
			INNER JOIN T_STD_MAST_BCD SMB
			ON PD.BCD_CD = SMB.BCD_CD
			WHERE PM.PUR_DATE = #{PUR_DATE}
			AND PM.ORGN_CD = #{ORGN_CD}
			AND PM.SUPR_CD = #{SUPR_CD}
			AND PM.USE_YN = 'Y'
			AND PD.USE_YN = 'Y'
		) WINP
		LEFT OUTER JOIN (
			SELECT
				ORGN_CD
				,CUSTMR_CD
				,CLSE_DATE
				,CLSE_SLIP_CD
				,CLSE_SLIP_SEQ
				,CLSE_PRICE
				,CLSE_QTY
				,CLSE_SUPR_AMT
				,CLSE_VAT
				,CLSE_TOT_AMT
				,CONF_TYPE
			FROM T_CLSE_CUSTMR_TMP
			WHERE ORGN_CD = #{ORGN_CD}
			AND CUSTMR_CD = #{SUPR_CD}
			AND CLSE_DATE = #{PUR_DATE}
			AND PUR_SALE_TYPE = '1'
		) CUSTMR
		ON WINP.ORGN_CD = CUSTMR.ORGN_CD
		AND WINP.SUPR_CD = CUSTMR.CUSTMR_CD
		AND WINP.PUR_DATE = CUSTMR.CLSE_DATE
		AND WINP.PUR_SLIP_CD = CUSTMR.CLSE_SLIP_CD
		AND WINP.PUR_SLIP_SEQ = CUSTMR.CLSE_SLIP_SEQ
		ORDER BY WINP.PUR_SLIP_CD,WINP.PUR_SLIP_SEQ
	</select>
	
	<select id="approvalSuprByPurchase" resultType="java.lang.String" parameterType="java.util.Map">
		/* approvalSuprByPurchase */
		DECLARE @SELECT_CNT INT
				,@UPDATE_CNT INT
		
		SET @SELECT_CNT = (
							SELECT COUNT(PUR_DATE) FROM T_PUR_MAST
							WHERE ORGN_CD = #{ORGN_CD}
							AND SUPR_CD = #{SUPR_CD}
							AND PUR_DATE = #{PUR_DATE}
							AND IFNULL(CONF_TYPE,'N') = 'N'
							AND IFNULL(SEND_TYPE,'N') != 'Y'
						)
		
		UPDATE T_PUR_MAST
		SET CONF_TYPE = 'Y'
			, MPROGRM = 'approvalSuprByPurchase'
			, MDATE = NOW()
			, MUSER = #{RESP_USER}
		WHERE ORGN_CD = #{ORGN_CD}
		AND SUPR_CD = #{SUPR_CD}
		AND PUR_DATE = #{PUR_DATE}
		AND IFNULL(CONF_TYPE,'N') = 'N'
		AND IFNULL(SEND_TYPE,'N') != 'Y'
		
		SET @UPDATE_CNT = @@ROWCOUNT

		IF(@SELECT_CNT = @UPDATE_CNT AND @UPDATE_CNT >= 1)
			BEGIN
				SELECT 'SUCCESS' AS RESULT_MSG
				
				UPDATE T_CLSE_CUSTMR_TMP
				SET CONF_TYPE = 'Y'
					, MPROGRM = 'approvalSuprByPurchase'
					, MDATE = NOW()
					, MUSER = #{RESP_USER}
				WHERE ORGN_CD = #{ORGN_CD}
				AND CUSTMR_CD = #{SUPR_CD}
				AND CLSE_DATE = #{PUR_DATE}
				AND PUR_SALE_TYPE = '1'
			END
		ELSE
			BEGIN
				SELECT 'FAIL' AS RESULT_MSG
			END
	</select>
	
	<select id="cancelSuprByPurchase" resultType="java.lang.String" parameterType="java.util.Map">
		/* cancelSuprByPurchase */
		DECLARE @SELECT_CNT INT
				,@UPDATE_CNT INT
		
		SET @SELECT_CNT = (
							SELECT COUNT(PUR_DATE) FROM T_PUR_MAST
							WHERE ORGN_CD = #{ORGN_CD}
							AND SUPR_CD = #{SUPR_CD}
							AND PUR_DATE = #{PUR_DATE}
							AND IFNULL(CONF_TYPE,'N') = 'Y'
							AND IFNULL(SEND_TYPE,'N') != 'Y'
						)
		
		UPDATE T_PUR_MAST
		SET CONF_TYPE = 'N'
			, MPROGRM = 'cancelSuprByPurchase'
			, MDATE = NOW()
			, MUSER = #{RESP_USER}
		WHERE ORGN_CD = #{ORGN_CD}
		AND SUPR_CD = #{SUPR_CD}
		AND PUR_DATE = #{PUR_DATE}
		AND IFNULL(CONF_TYPE,'N') = 'Y'
		AND IFNULL(SEND_TYPE,'N') != 'Y'
		
		SET @UPDATE_CNT = @@ROWCOUNT

		IF(@SELECT_CNT = @UPDATE_CNT AND @UPDATE_CNT >= 1)
			BEGIN
				SELECT 'SUCCESS' AS RESULT_MSG
				
				UPDATE T_CLSE_CUSTMR_TMP
				SET CONF_TYPE = 'N'
					, MPROGRM = 'approvalSuprByPurchase'
					, MDATE = NOW()
					, MUSER = #{RESP_USER}
				WHERE ORGN_CD = #{ORGN_CD}
				AND CUSTMR_CD = #{SUPR_CD}
				AND CLSE_DATE = #{PUR_DATE}
				AND PUR_SALE_TYPE = '1'
			END
		ELSE
			BEGIN
				SELECT 'FAIL' AS RESULT_MSG
			END
	</select>

</mapper>