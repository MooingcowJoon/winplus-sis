package com.samyang.winplus.sis.basic.controller;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.samyang.winplus.sis.basic.service.CustmrSearchService;
import com.samyang.winplus.sis.basic.service.CustomerGoodsManagementService;
import com.samyang.winplus.common.system.model.EmpSessionDto;
import com.samyang.winplus.common.system.util.CommonUtil;



@RequestMapping("/sis/basic")
@RestController
public class CustomerGoodsManagementController {

	@Autowired
	private MessageSource messageSource;
	
	@Autowired
	CustmrSearchService custmrSearchService;
	
	@Autowired
	CustomerGoodsManagementService customerGoodsManagementService;
	
	@Autowired
	protected CommonUtil commonUtil;		
	private final Logger logger = LoggerFactory.getLogger(getClass());

	private final static String DEFAULT_PATH = "sis/basic"; // JSP경로


	/**
	  * custmrSearch - 직영점별 납품업체관리의 거래처관리 조회
	  * @author 손경락
	  * @param request
	  * @return ModelAndView
	  */
	@RequestMapping(value="CustomerGoodsManagement.sis", method=RequestMethod.POST)
	public ModelAndView purChaseSearch(HttpServletRequest request) throws SQLException, Exception {
		logger.info("@@@@@@@@@@ CustomerGoodsManagementController.java  CustomerGoodsManagementController.sis ============");
		
		ModelAndView mav = new ModelAndView();
		mav.setViewName(DEFAULT_PATH + "/" + "customerGoodsManagement");
		return mav;
	}
	
	/**
	  * renewCustomerGoodsManagement - 전문/취급점 구매가능상품관
	  * @author 최지민
	  * @param request
	  * @return ModelAndView
	  */
	@RequestMapping(value="renewCustomerGoodsManagement.sis", method=RequestMethod.POST)
	public ModelAndView renewCustomerGoodsManagement(HttpServletRequest request) throws SQLException, Exception {
		
		ModelAndView mav = new ModelAndView();
		mav.setViewName(DEFAULT_PATH + "/" + "renewCustomerGoodsManagement");
		return mav;
	}
	
	/**
	  * getSearchMasterBarcodeList - 대.중.소 or 상품검색입력 조건을 바코드상품목록조회 
	  * @author 손경락
	  * @param request
	  * @return Map<String, Object>
	  */
	@RequestMapping(value="getSearchMasterBarcodeList.do", method=RequestMethod.POST)
	public Map<String, Object> getSearchMasterBarcodeList(HttpServletRequest request, @RequestParam Map<String,String> parmaMap) throws SQLException, Exception {
		//logger.debug("@@@@@@@@@@ CustomerGoodsManagementController.java  getSearchMasterBarcodeList.do ============");
	    Map<String, Object> resultMap = new HashMap<String, Object>();
		
		String PARAM_GRUP_TOP_CD  = request.getParameter("PARAM_GRUP_TOP_CD");
		String PARAM_GRUP_MID_CD  = request.getParameter("PARAM_GRUP_MID_CD");
		String PARAM_GRUP_BOT_CD  = request.getParameter("PARAM_GRUP_BOT_CD");
		String PARAM_BCD_NM       = request.getParameter("PARAM_BCD_NM");
    
		Map<String, Object> paramMap = new HashMap<String, Object>();
		paramMap.put("PARAM_GRUP_TOP_CD",    PARAM_GRUP_TOP_CD);
		paramMap.put("PARAM_GRUP_MID_CD",    PARAM_GRUP_MID_CD);
		paramMap.put("PARAM_GRUP_BOT_CD",    PARAM_GRUP_BOT_CD);
		paramMap.put("PARAM_BCD_NM"     ,    "%"+PARAM_BCD_NM + "%");
		
		//logger.debug("@@@@@@@@@@ PARAM_GRUP_TOP_CD ============" + PARAM_GRUP_TOP_CD);
		//logger.debug("@@@@@@@@@@ PARAM_GRUP_MID_CD ============" + PARAM_GRUP_MID_CD);
		//logger.debug("@@@@@@@@@@ PARAM_GRUP_BOT_CD ============" + PARAM_GRUP_BOT_CD);
		//logger.debug("@@@@@@@@@@ PARAM_BCD_NM ============" + PARAM_BCD_NM);
		
		List<Map<String, Object>> customList = customerGoodsManagementService.getSearchMasterBarcodeList(paramMap);				
		resultMap.put("gridDataList", customList);
		
		return resultMap;
	}
	
	/**
	  * CustomerGoodsManagementCUD - 매출처주문가능 상품 C,U,D
	  * @author 손경락
	  * @param request
	  * @return Map<String, Object>
	  */
	@RequestMapping(value="CustomerGoodsManagementCUD.do", method=RequestMethod.POST)
	public Map<String, Object> CustomerGoodsManagementCUD(HttpServletRequest request) throws SQLException, Exception {
		Map<String, Object> resultMap = new HashMap<String, Object>();
		EmpSessionDto empSessionDto = commonUtil.getEmpSessionDto(request);
		String emp_no = empSessionDto.getEmp_no();
		
		List<Map<String, Object>> dhtmlxParamMapList = commonUtil.getDhtmlXParamMapList(request);
		for(Map<String, Object> dhtmlxParamMap : dhtmlxParamMapList){
			dhtmlxParamMap.put("REG_ID", emp_no);
			//logger.debug( "dhtmlxParamMapList => " +  dhtmlxParamMap.toString()  );
		}

		
		int resultRowCnt = customerGoodsManagementService.saveStdCustomrGoodsScreenList(dhtmlxParamMapList);
		resultMap.put("resultRowCnt", resultRowCnt);
		return resultMap;
	}
	
	/**
	  * getSearchTstdCustomerGoodsList -  등록된 주문가능상조회
	  * @author 손경락
	  * @param request
	  * @return Map<String, Object>
	  */
	@RequestMapping(value="getSearchTstdCustomerGoodsList.do", method=RequestMethod.POST)
	public Map<String, Object> menuManagementR1Mk(HttpServletRequest request, @RequestParam Map<String,String> parmaMap) throws SQLException, Exception {
		//logger.debug("@@@@@@@@@@ mkCustomerManagementController.java  custmrSearchR1Mk.do ============");
	    Map<String, Object> resultMap = new HashMap<String, Object>();
		
		String PARAM_ORGN_DIV_CD = request.getParameter("PARAM_ORGN_DIV_CD");
		String PARAM_ORGN_CD     = request.getParameter("PARAM_ORGN_CD");
		String PARAM_CUSTMR_CD   = request.getParameter("PARAM_CUSTMR_CD");
		String PARAM_BCD_NM      = request.getParameter("PARAM_BCD_NM");

		Map<String, Object> paramMap = new HashMap<String, Object>();
		paramMap.put("PARAM_ORGN_DIV_CD",   PARAM_ORGN_DIV_CD);
		paramMap.put("PARAM_ORGN_CD",       PARAM_ORGN_CD);
		paramMap.put("PARAM_CUSTMR_CD",     PARAM_CUSTMR_CD);
		paramMap.put("PARAM_BCD_NM"   ,     "%"+PARAM_BCD_NM + "%");
		
		List<Map<String, Object>> customList = customerGoodsManagementService.getSearchTstdCustomerGoodsList(paramMap);				
		resultMap.put("gridDataList", customList);
		
		return resultMap;
	}	
	
	
	/**
	  * getSearchMasterBarcodePriceList - 대.중.소 or 상품검색입력 조건을 바코드상품목록조회(발주서 입력화면)
	  * @author 손경락
	  * @param request
	  * @return Map<String, Object>
	  */
	@RequestMapping(value="getSearchMasterBarcodePriceList.do", method=RequestMethod.POST)
	public Map<String, Object> getSearchMasterBarcodePriceList(HttpServletRequest request, @RequestParam Map<String,String> parmaMap) throws SQLException, Exception {
		//logger.debug("@@@@@@@@@@ CustomerGoodsManagementController.java  getSearchMasterBarcodePriceList.do ============");
	    Map<String, Object> resultMap = new HashMap<String, Object>();
		
		String PARAM_GRUP_TOP_CD  = request.getParameter("PARAM_GRUP_TOP_CD");
		String PARAM_GRUP_MID_CD  = request.getParameter("PARAM_GRUP_MID_CD");
		String PARAM_GRUP_BOT_CD  = request.getParameter("PARAM_GRUP_BOT_CD");
		String PARAM_BCD_NM       = request.getParameter("PARAM_BCD_NM");
		String PARAM_ORGN_DIV_CD  = request.getParameter("PARAM_ORGN_DIV_CD");
		String PARAM_ORGN_CD      = request.getParameter("PARAM_ORGN_CD");
		String PARAM_CUST_CD      = request.getParameter("PARAM_CUST_CD");
		
		Map<String, Object> paramMap = new HashMap<String, Object>();
		paramMap.put("PARAM_GRUP_TOP_CD",    PARAM_GRUP_TOP_CD);
		paramMap.put("PARAM_GRUP_MID_CD",    PARAM_GRUP_MID_CD);
		paramMap.put("PARAM_GRUP_BOT_CD",    PARAM_GRUP_BOT_CD);
		paramMap.put("PARAM_BCD_NM"     ,    "%"+PARAM_BCD_NM + "%");
		paramMap.put("PARAM_ORGN_DIV_CD",    PARAM_ORGN_DIV_CD);
		paramMap.put("PARAM_ORGN_CD"    ,    PARAM_ORGN_CD);
		paramMap.put("PARAM_CUST_CD"    ,    PARAM_CUST_CD);
		
		//logger.debug(" PARAM_GRUP_TOP_CD =>" + PARAM_GRUP_TOP_CD +" PARAM_GRUP_MID_CD =>" + PARAM_GRUP_MID_CD );
		//logger.debug(" PARAM_GRUP_BOT_CD =>" + PARAM_GRUP_BOT_CD +" PARAM_BCD_NM      =>" + PARAM_BCD_NM  );
		//logger.debug(" PARAM_ORGN_DIV_CD =>" + PARAM_ORGN_DIV_CD +" PARAM_ORGN_CD     =>" + PARAM_ORGN_CD );
		//logger.debug(" PARAM_CUST_CD     =>" + PARAM_CUST_CD  );
		
		List<Map<String, Object>> customList = customerGoodsManagementService.getSearchMasterBarcodePriceList(paramMap);				
		resultMap.put("gridDataList", customList);
		
		return resultMap;
	}
	
}
