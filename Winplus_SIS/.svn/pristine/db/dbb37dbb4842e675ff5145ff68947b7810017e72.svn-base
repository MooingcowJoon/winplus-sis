<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.samyang.winplus.sis.basic.dao.CustomerGoodsManagementDao">

    <insert id="insertStdCustomrGoods" parameterType="java.util.Map">
        /* insertStdCustomrGoods [CustomerGoodsManagement.xml 거래처별상품 ]*/
        INSERT INTO T_STD_CUSTMR_GOODS (
               ORGN_DIV_CD
             , ORGN_CD
             , CUSTMR_CD
             , BCD_CD
             , GOODS_NO
             , ORD_TYPE
             , USE_YN
             , CPROGRM
             , CUSER
             , CDATE
        ) VALUES (
               'A01'
             , '000000'
             , #{CUSTMR_CD}
             , #{BCD_CD}
             , #{GOODS_NO}
             , #{ORD_TYPE}
             , #{USE_YN}
             , #{PARAM_PROGRM}
             , #{REG_ID}
             , GETDATE()
        )
    </insert>
    
    <update id="updateStdCustomrGoods" parameterType="java.util.Map">
        /* updateStdCustomrGoods [CustomerGoodsManagement.xml 거래처별상품]*/
        UPDATE T_STD_CUSTMR_GOODS
        SET  , USE_YN      = #{use_yn}
             , MPROGRM     = #{PARAM_PROGRM}
             , MUSER       = #{REG_ID}
             , MDATE       = GETDATE()
         WHERE ORGN_DIV_CD = #{ORGN_DIV_CD}
           AND ORGN_CD     = #{ORGN_CD}
           AND CUSTMR_CD   = #{CUSTMR_CD}
           AND BCD_CD      = #{BCD_CD}
    </update>
    
    <delete id="deleteStdCustomrGoods" parameterType="java.util.Map">
        /* deleteStdCustomrGoods [CustomerGoodsManagement.xml 거래처별상품] */
        DELETE T_STD_CUSTMR_GOODS
         WHERE ORGN_DIV_CD = #{ORGN_DIV_CD}
           AND ORGN_CD     = #{ORGN_CD}
           AND CUSTMR_CD   = #{CUSTMR_CD}
           AND BCD_CD      = #{BCD_CD}
    </delete>

    <select id="getSearchMasterBarcodeList" resultType="java.util.Map" parameterType="java.util.Map">
        /* getSearchMasterBarcodeList [ CustomerGoodsManagement.xml 분류별바코드 LIST 가져오기] */
        SELECT  BB.GOODS_NO      /* 상품코드 */
              , BB.BCD_CD        /* 자바코드 */
              , BB.BCD_M_CD      /* 모바코드 */
              , BB.BCD_NM        /* 상품이름 */
              , BB.DIMEN_NM      /* 규격     */
              , BB.UNIT_CD       /* 단위코드 */
              , BB.USE_YN        /* 사용여부 */
              , BB.GOODS_NO      /* 상품번호 */
              , CONVERT(CHAR(19), BB.CDATE, 120) CDATE
        FROM   T_STD_MAST_GOODS    AA
               JOIN T_STD_MAST_BCD BB  ON AA.GOODS_NO = BB.GOODS_NO
        WHERE  1 =  1
        <if test='PARAM_GRUP_TOP_CD != null and PARAM_GRUP_TOP_CD != ""'>
          AND  AA.GRUP_TOP_CD  =  #{PARAM_GRUP_TOP_CD}
          AND  AA.GRUP_MID_CD  =  #{PARAM_GRUP_MID_CD}
          AND  AA.GRUP_BOT_CD  =  #{PARAM_GRUP_BOT_CD}
        </if> 
        <if test='PARAM_BCD_NM != null and PARAM_BCD_NM != ""'>
          AND  BB.BCD_NM LIKE #{PARAM_BCD_NM}
        </if> 
        ORDER  BY AA.GRUP_TOP_CD, AA.GRUP_MID_CD, AA.GRUP_BOT_CD
    </select>
    
    <select id="getSearchTstdCustomerGoodsList" resultType="java.util.Map" parameterType="java.util.Map">
        /* getSearchTstdCustomerGoodsList [CustomerGoodsManagement.xml 거래처별상품가져오기 ] */
        SELECT  AA.GOODS_NO      /* 상품코드 */
              , AA.BCD_CD        /* 자바코드 */
              , AA.BCD_M_CD      /* 모바코드 */
              , AA.BCD_NM        /* 상품이름 */
              , AA.DIMEN_NM      /* 규격     */
              , AA.UNIT_CD       /* 단위코드 */
              , BB.USE_YN        /* 사용여부 */
              , BB.GOODS_NO      /* 상품번호 */
              , BB.CUSTMR_CD     /* 거래처코드 */
              , BB.ORGN_CD       /* 매장번호  */
              , BB.ORGN_DIV_CD   /* 조직코드  */
              , CONVERT(CHAR(19), BB.CDATE, 120) CDATE
        FROM   T_STD_MAST_BCD     AA
               JOIN T_STD_CUSTMR_GOODS BB ON AA.GOODS_NO = BB.GOODS_NO AND AA.BCD_CD = BB.BCD_CD
        WHERE  1 =  1
         AND   BB.CUSTMR_CD    = #{PARAM_CUSTMR_CD}
        /* AND   BB.ORGN_CD      = {PARAM_ORGN_CD}       2017-11-17 */
        /* AND   BB.ORGN_DIV_CD  = {PARAM_ORGN_DIV_CD}   2017-11-17 */
        <if test='PARAM_BCD_NM != null and PARAM_BCD_NM != ""'>
         AND   AA.BCD_NM  LIKE #{PARAM_BCD_NM}
        </if> 
    </select>

    <select id="getSearchMasterBarcodePriceList" resultType="java.util.Map" parameterType="java.util.Map">
        /* getSearchMasterBarcodePriceList [CustomerGoodsManagement.xml 상품기준 구매가격 가져오기] */
        SELECT  B.GOODS_NO      /* 상품코드 */
              , B.BCD_CD        /* 자바코드 */
              , B.BCD_M_CD      /* 모바코드 */
              , B.BCD_NM        /* 상품이름 */
              , B.DIMEN_NM      /* 규격     */
              , B.UNIT_CD       /* 단위코드 */
              , ( SELECT CMMN_DETAIL_CD_NM 
                    FROM COM_CMMN_CODE_DETAIL
                   WHERE  CMMN_CD = 'DSCD_TYPE' AND CMMN_DETAIL_CD =  A.PUR_DSCD_TYPE
                 )  DSCD_TYPE               /* 반품가능여부 */   
              , C.PUR_PRICE     /* 구매단가 */
              , E.CUSTMR_NM     /* 협력사명 */
              , C.CUSTMR_CD
        FROM   T_STD_MAST_GOODS          A
               JOIN T_STD_MAST_BCD       B ON A.GOODS_NO  = B.GOODS_NO  AND B.USE_YN      = 'Y'
               JOIN T_STD_MAST_PUR_PRICE C ON C.BCD_CD    = B.BCD_CD    AND C.GOODS_NO    = B.GOODS_NO
               JOIN T_STD_MAST_CUSTMR    E ON E.CUSTMR_CD = C.CUSTMR_CD 
        WHERE  1 =  1
          AND  C.CUSTMR_CD NOT IN  
               (
                  SELECT ISNULL(RM, CMMN_DETAIL_CD) ORGN_CD
                    FROM COM_CMMN_CODE_DETAIL
                   WHERE CMMN_CD='ORGN_CD'
                     AND DIV1 = 'CT'
               )
        <if test='PARAM_GRUP_TOP_CD != null and PARAM_GRUP_TOP_CD != ""'>
          AND  A.GRUP_TOP_CD  =   #{PARAM_GRUP_TOP_CD}
          AND  A.GRUP_MID_CD  =   #{PARAM_GRUP_MID_CD}
          AND  A.GRUP_BOT_CD  =   #{PARAM_GRUP_BOT_CD}
        </if> 
        <if test='PARAM_BCD_NM != null and PARAM_BCD_NM != ""'>
          AND  B.BCD_NM      LIKE #{PARAM_BCD_NM}
        </if> 
        <if test='PARAM_CUST_CD != null and PARAM_CUST_CD != ""'>
          AND  C.CUSTMR_CD =  #{PARAM_CUST_CD}
        </if> 

        ORDER  BY A.GRUP_TOP_CD, A.GRUP_MID_CD, A.GRUP_BOT_CD		  
    </select>
            
    <select id="getSearchMasterBarcodeLowestPriceList" resultType="java.util.Map" parameterType="java.util.Map">
        /* getSearchMasterBarcodeLowestPriceList [CustomerGoodsManagement.xml 직영점->센터(팜)/협력사, 센터->협력사 발주시 최저구매가격 가져오기] */
        SELECT  B.GOODS_NO                 /* 상품코드 */
              , B.BCD_CD                   /* 자바코드 */
              , B.BCD_M_CD                 /* 모바코드 */
              , B.BCD_NM                   /* 상품이름 */
              , B.DIMEN_NM                 /* 규격     */
              , B.UNIT_CD                  /* 단위코드 */
              , ( SELECT CMMN_DETAIL_CD_NM UNIT_NM  
                    FROM COM_CMMN_CODE_DETAIL WHERE CMMN_CD = 'UNIT_CD' AND  CMMN_DETAIL_CD = B.UNIT_CD
                ) UNIT_NM
              , ( SELECT CMMN_DETAIL_CD_NM 
                    FROM COM_CMMN_CODE_DETAIL
                   WHERE  CMMN_CD = 'DSCD_TYPE' AND CMMN_DETAIL_CD =  A.PUR_DSCD_TYPE
                 )  DSCD_TYPE               /* 반품가능여부 */   
              , C.PUR_PRICE   GOODS_PRICE   /* 구매단가   */
              , D.CUSTMR_CD   SUPR_CD       /* 협력사코드   */
              , D.CUSTMR_NM   SUPR_NM       /* 협력사명     */
              , F.WARE_CD                   /* 창고코드     */
              , F.WARE_NM                   /* 창고이름     */
              , B.UNIT_QTY                  /* 입수량       */
              , A.TAX_TYPE                  /* 과세구분     */
              , A.MIN_PUR_QTY               /* CS최소주문수량 */
              , ( SELECT CMMN_DETAIL_CD_NM UNIT_NM  
                    FROM COM_CMMN_CODE_DETAIL WHERE CMMN_CD = 'UNIT_CD' AND  CMMN_DETAIL_CD = A.MIN_PUR_UNIT
                ) MIN_PUR_UNIT              /* CS최소주문단위 */
              , A.MIN_ORD_QTY  MIN_LMT_QTY  /* 주문제한수량   */              
        FROM   T_STD_MAST_GOODS    A
               JOIN T_STD_MAST_BCD B  ON B.GOODS_NO = A.GOODS_NO AND B.USE_YN = 'Y'
               JOIN ( 
                      SELECT  BCD_CD,  PUR_PRICE, CUSTMR_CD 
                      FROM  ( 
                              SELECT ROW_NUMBER() OVER (PARTITION BY BCD_CD  ORDER BY BCD_CD,PRIOR_ITY, PUR_PRICE ) AS ROWNUM,
                                     BCD_CD,  PUR_PRICE, CUSTMR_CD
                                FROM (
                                     <if test='PARAM_CUST_DIV_CD == "OUT"'>  
                                     /* 외부협력사로 직발주인경우 */
                                     SELECT B.BCD_CD , C.PUR_PRICE, C.CUSTMR_CD,  2 PRIOR_ITY  /* 공급사기준 매입단가 */
                                     FROM   T_STD_MAST_GOODS A
                                            JOIN T_STD_MAST_BCD       B ON B.GOODS_NO  = A.GOODS_NO AND B.USE_YN = 'Y'
                                            JOIN T_STD_MAST_PUR_PRICE C ON C.BCD_CD    = B.BCD_CD   AND C.GOODS_NO = B.GOODS_NO
                                            JOIN T_STD_MAST_CUSTMR    D ON D.CUSTMR_CD = C.CUSTMR_CD 
                                     WHERE  1 = 1
                                       AND  C.CUSTMR_CD NOT IN  /* 센터는 제외한다 */  
                                            ( 
                                              SELECT ISNULL(RM, CMMN_DETAIL_CD) ORGN_CD
                                                FROM COM_CMMN_CODE_DETAIL
                                               WHERE CMMN_CD ='ORGN_CD'
                                                 AND DIV1 IN ( 'CT','PM')
                                            )
                                       <if test='PARAM_CUST_CD != null and PARAM_CUST_CD != ""'>
                                       AND  C.CUSTMR_CD = #{PARAM_CUST_CD}  /* 공급사(협력사) */
                                       </if>
                                       <if test='PARAM_BCD_NM != null and PARAM_BCD_NM != ""'>
                                       AND  B.BCD_NM LIKE #{PARAM_BCD_NM}
                                       </if>
                                     </if>
                                     <if test='PARAM_CUST_DIV_CD == "B01"'>  
                                         /*  협력사조직구분코드가  B01이면 센터로의 발주이고 판매가격마스터의 조직이 공급사(협력사)임 */
	                                     SELECT B.BCD_CD , C.PUR_PRICE, C.CUSTMR_CD,  2 PRIOR_ITY  /* 센타기준 판매단가 */
                                         FROM   T_STD_MAST_GOODS A
                                                JOIN T_STD_MAST_BCD       B ON B.GOODS_NO  = A.GOODS_NO AND B.USE_YN = 'Y' <if test='PARAM_ORD_TYPE == "5"'> AND  B.DELI_DD_YN = 'Y' /* 일배발주 */ </if>
                                                JOIN T_STD_MAST_PUR_PRICE C ON C.BCD_CD    = B.BCD_CD   AND C.GOODS_NO = B.GOODS_NO
                                                JOIN T_STD_MAST_CUSTMR    D ON D.CUSTMR_CD = C.CUSTMR_CD 
                                         WHERE  1 = 1
	                                       AND  C.CUSTMR_CD  IN  /* 센터Only */  
	                                            ( 
	                                              SELECT ISNULL(RM, CMMN_DETAIL_CD) ORGN_CD
	                                                FROM COM_CMMN_CODE_DETAIL
	                                               WHERE CMMN_CD ='ORGN_CD'
	                                                 AND DIV1 = 'CT'
	                                            )
                                           <if test='PARAM_CUST_CD != null and PARAM_CUST_CD != ""'>
                                           /* 꼭 협력사 단위로봐야하는 경우 */
                                           AND  C.CUSTMR_CD =  #{PARAM_CUST_CD}
                                           </if>
                                           <if test='PARAM_BCD_NM != null and PARAM_BCD_NM != ""'>
                                           AND  B.BCD_NM LIKE #{PARAM_BCD_NM}
                                           </if>
                                         UNION   ALL
                                         SELECT  C.BCD_CD, MIN(C.CENT_SALE_PRICE) PUR_PRICE, G.CUSTMR_CD, 1 PRIOR_ITY /* 센터 우선순위빠르게하기위해 */
                                           FROM  T_CENT_EVENT_PRICE             A
                                                 JOIN T_CENT_EVENT_PRICE_CUSTMR B ON B.EVENT_GRUP_CD =  A.EVENT_GRUP_CD AND B.CUSTMR_CD = #{PARAM_ORGN_CD}
                                                 JOIN T_CENT_EVENT_PRICE_GOODS  C ON C.EVENT_GRUP_CD =  A.EVENT_GRUP_CD
                                                 JOIN T_STD_MAST_BCD            D ON D.BCD_CD      = C.BCD_CD      AND D.USE_YN = 'Y'
                                                 JOIN T_STD_MAST_GOODS          E ON E.GOODS_NO    = D.GOODS_NO
                                                 JOIN (
                                                        SELECT CMMN_DETAIL_CD ORGN_CD, ISNULL(RM, CMMN_DETAIL_CD) CUSTMR_CD
                                                          FROM COM_CMMN_CODE_DETAIL
                                                         WHERE CMMN_CD='ORGN_CD'
                                                           AND DIV1 = 'CT' /* 물류센타로주문 */
                                                     ) G ON G.ORGN_CD = A.ORGN_CD
                                         WHERE  1 = 1 /* A.ORGN_DIV_CD = 'B01' */
                                           AND  CONVERT(CHAR(8), GETDATE(), 112)  BETWEEN STRT_DATE AND  END_DATE
                                           AND  B.USE_YN = 'Y'
                                           AND  C.USE_YN = 'Y'
                                           AND  C.CENT_SALE_PRICE IS NOT NULL
                                           <if test='PARAM_CUST_CD != null and PARAM_CUST_CD != ""'>
                                           /* 꼭 협력사 단위로봐야하는 경우 */
                                           AND  B.CUSTMR_CD =  #{PARAM_CUST_CD}
                                           </if>
                                           <if test='PARAM_BCD_NM != null and PARAM_BCD_NM != ""'>
                                           AND  D.BCD_NM LIKE #{PARAM_BCD_NM}
                                           </if>
                                         GROUP  BY G.CUSTMR_CD, C.BCD_CD , E.TAX_TYPE                                           
                                     </if>
                                     <if test='PARAM_CUST_DIV_CD == "A06"'>  
                                         /*  협력사조직구분코드가 A06 팜이면 팜센터로의 발주이고 가격마스트의 가격을 가져온다 */
                                         SELECT B.BCD_CD , C.PUR_PRICE,   C.CUSTMR_CD,  2 PRIOR_ITY  /* 팜 기준 판매단가 */
                                         FROM   T_STD_MAST_GOODS A
                                                JOIN T_STD_MAST_BCD       B ON B.GOODS_NO  = A.GOODS_NO AND B.USE_YN = 'Y'
                                                JOIN T_STD_MAST_PUR_PRICE C ON C.BCD_CD    = B.BCD_CD   AND C.GOODS_NO = B.GOODS_NO
                                                JOIN T_STD_MAST_CUSTMR    D ON D.CUSTMR_CD = C.CUSTMR_CD 
                                         WHERE  1 = 1
                                           AND  C.CUSTMR_CD IN  /* 팜 센터만 대상이다  */
                                                (
                                                  SELECT ISNULL(RM, CMMN_DETAIL_CD) CUSTMR_CD
                                                    FROM COM_CMMN_CODE_DETAIL
                                                   WHERE CMMN_CD='ORGN_CD'
                                                     AND DIV1 = 'PM'
                                                 )                    
                                           <if test='PARAM_BCD_NM != null and PARAM_BCD_NM != ""'>
                                           AND  B.BCD_NM LIKE '%%'
                                           </if>
                                     </if>
                                     ) B
                            ) D	   
                      WHERE  D.ROWNUM  <![CDATA[<=]]> 1 /* 최저가 하나만 가져오는 조건 */
                    ) C ON C.BCD_CD = B.BCD_CD
               LEFT OUTER JOIN T_STD_MAST_CUSTMR D ON D.CUSTMR_CD = C.CUSTMR_CD
               LEFT OUTER JOIN (
                                SELECT CMMN_DETAIL_CD WARE_CD, CMMN_DETAIL_CD_NM WARE_NM, RM
                                  FROM COM_CMMN_CODE_DETAIL
                                 WHERE CMMN_CD ='ORGN_CD'
                                   AND DIV1 IN ( 'CT', 'MK')
                                ) F ON F.RM = C.CUSTMR_CD
        WHERE  1 =  1
        ORDER  BY A.GRUP_TOP_CD, A.GRUP_MID_CD, A.GRUP_BOT_CD
    </select>
                
    <select id="getSearchMasterBarcodeFreshPriceList" resultType="java.util.Map" parameterType="java.util.Map">
        /* getSearchMasterBarcodeFreshPriceList [CustomerGoodsManagement.xml 팜센터->협력사 발주시 최저구매가격 가져오기] */
        SELECT  B.GOODS_NO                 /* 상품코드 */
              , B.BCD_CD                   /* 자바코드 */
              , B.BCD_M_CD                 /* 모바코드 */
              , B.BCD_NM                   /* 상품이름 */
              , B.DIMEN_NM                 /* 규격     */
              , B.UNIT_CD                  /* 단위코드 */
              , ( SELECT CMMN_DETAIL_CD_NM UNIT_NM
                    FROM COM_CMMN_CODE_DETAIL WHERE CMMN_CD = 'UNIT_CD' AND  CMMN_DETAIL_CD = B.UNIT_CD
                ) UNIT_NM
              , ( SELECT CMMN_DETAIL_CD_NM 
                    FROM COM_CMMN_CODE_DETAIL
                   WHERE  CMMN_CD = 'DSCD_TYPE' AND CMMN_DETAIL_CD =  A.PUR_DSCD_TYPE
                 )  DSCD_TYPE               /* 반품가능여부 */   
              , C.PUR_PRICE   GOODS_PRICE   /* 구매단가   */
              , D.CUSTMR_CD   SUPR_CD       /* 협력사코드   */
              , D.CUSTMR_NM   SUPR_NM       /* 협력사명     */
              , NULL WARE_CD                /* 창고코드     */
              , NULL WARE_NM                /* 창고이름     */
              , B.UNIT_QTY                  /* 입수량       */
              , A.TAX_TYPE                  /* 과세구분     */
              , A.MIN_PUR_QTY               /* CS최소주문수량 */
              , ( SELECT CMMN_DETAIL_CD_NM UNIT_NM
                    FROM COM_CMMN_CODE_DETAIL WHERE CMMN_CD = 'UNIT_CD' AND  CMMN_DETAIL_CD = A.MIN_PUR_UNIT
                ) MIN_PUR_UNIT              /* CS최소주문단위 */
              , A.MIN_ORD_QTY  MIN_LMT_QTY  /* 주문제한수량   */
        FROM   T_STD_MAST_GOODS    A
               JOIN T_STD_MAST_BCD B  ON B.GOODS_NO = A.GOODS_NO AND B.USE_YN = 'Y'
               JOIN (
                      SELECT  BCD_CD,  PUR_PRICE, CUSTMR_CD
                      FROM  (
                              SELECT ROW_NUMBER() OVER (PARTITION BY BCD_CD  ORDER BY BCD_CD,PUR_PRICE, PRIOR_ITY) AS ROWNUM,
                                     BCD_CD,  PUR_PRICE, CUSTMR_CD
                                FROM ( /* 1. 윈플러스 팜에서 취급하고 있는 상품을 구한다음  T_STD_MAST_PUR_PRICE에서 공급사 및 단가를 구한다 */  
                                     SELECT B.BCD_CD ,  C.PUR_PRICE,  C.CUSTMR_CD,  2 PRIOR_ITY  /* 공급사기준 매입단가 */
                                     FROM   T_STD_MAST_GOODS A
                                            JOIN T_STD_MAST_BCD       B ON B.GOODS_NO  = A.GOODS_NO AND B.USE_YN = 'Y'
                                            JOIN T_STD_MAST_PUR_PRICE C ON C.BCD_CD    = B.BCD_CD   AND C.GOODS_NO = B.GOODS_NO
                                            JOIN (  /* 윈플러스 팜에서 취급하고 있는 상품 */
                                                  SELECT  B.BCD_CD, A.GOODS_NO
                                                    FROM  T_STD_MAST_GOODS A
                                                          JOIN T_STD_MAST_BCD       B ON B.GOODS_NO  = A.GOODS_NO AND B.USE_YN = 'Y'
                                                          JOIN T_STD_MAST_PUR_PRICE C ON C.BCD_CD    = B.BCD_CD   AND C.GOODS_NO = B.GOODS_NO
                                                   WHERE  C.CUSTMR_CD IN  /* 팜 센터에서 취급하는 상품을 구한다  */
                                                          (
                                                            SELECT ISNULL(RM, CMMN_DETAIL_CD) CUSTMR_CD
                                                              FROM COM_CMMN_CODE_DETAIL
                                                             WHERE CMMN_CD='ORGN_CD'
                                                               AND DIV1 = 'PM'
                                                           )
                                                  ) D ON D.BCD_CD = C.BCD_CD AND D.GOODS_NO = C.GOODS_NO
                                     WHERE  1 = 1
                                       AND  C.CUSTMR_CD NOT IN /* 센터는 제외한 외부공급사를 구한다 */
                                            (
                                              SELECT ISNULL(RM, CMMN_DETAIL_CD) ORGN_CD
                                                FROM COM_CMMN_CODE_DETAIL
                                               WHERE CMMN_CD ='ORGN_CD'
                                                 AND DIV1 IN ( 'CT','PM')
                                            )
                                       <if test='PARAM_CUST_CD != null and PARAM_CUST_CD != ""'>AND  C.CUSTMR_CD = #{PARAM_CUST_CD}  /* 공급사(협력사) */</if>
                                       <if test='PARAM_BCD_NM != null and PARAM_BCD_NM != ""'>AND  B.BCD_NM LIKE #{PARAM_BCD_NM}</if>
                                     ) B
                            ) D
                      WHERE  D.ROWNUM  <![CDATA[<=]]> 1 /* 최저가 하나만 가져오는 조건 */
                    ) C ON C.BCD_CD = B.BCD_CD
               JOIN T_STD_MAST_CUSTMR D ON D.CUSTMR_CD = C.CUSTMR_CD
        WHERE  1 =  1
        ORDER  BY A.GRUP_TOP_CD, A.GRUP_MID_CD, A.GRUP_BOT_CD
    </select>

	<select id="getCustmrStdPrice" resultType="java.util.Map" parameterType="java.util.Map">
		/* getCustmrStdPrice */
		SELECT T.STD_PRICE_GRUP
				,T.STD_PRICE_GRUP_NM
				,T.BCD_CD
				,T.BCD_NM
				,T.DIMEN_NM
				,T.GOODS_NO
				,T.STD_SALE_PRICE
				,T.SALE_PRICE
				,T.PUR_PRICE
				,ISNULL((((T.STD_SALE_PRICE - T.PUR_PRICE) / T.PUR_PRICE) * 100),0) AS PROF_RATE
				,T.TAX_YN
				,T.USE_YN
				,T.RANK
				,T.REMK
				,T.STRT_DATE
				,T.CUSTMR_GRUP
				,(T.CUSTMR_GRUP) AS HID_CUSTMR_GRUP
				,T.CDATE
		FROM(
			SELECT TCG.STD_PRICE_GRUP
					,TC.STD_PRICE_GRUP_NM
					,TCG.BCD_CD
					,TB.BCD_NM
					,TB.DIMEN_NM
					,TB.GOODS_NO
					,CAST(TCG.SALE_PRICE AS INT) STD_SALE_PRICE
					,CAST(TS.SALE_PRICE AS INT) SALE_PRICE
					,TP.PUR_PRICE
					,TCG.TAX_YN
					,TCG.USE_YN
					,TCG.REMK
					,TC.STRT_DATE
					,TC.CUSTMR_GRUP
					,RANK() OVER(PARTITION BY TS.ORGN_CD, TS.BCD_CD ORDER BY TS.PROF_RATE DESC) AS 'RANK'
					,TCG.CDATE
			FROM T_CENT_STD_PRICE_GOODS AS TCG
			INNER JOIN T_CENT_STD_PRICE AS TC
			ON TCG.CUSTMR_GRUP = TC.CUSTMR_GRUP
			AND TCG.STD_PRICE_GRUP = TC.STD_PRICE_GRUP
			INNER JOIN T_STD_MAST_BCD AS TB
			ON TCG.BCD_CD = TB.BCD_CD
			LEFT JOIN T_STD_MAST_SALE_PRICE AS TS
			ON TCG.BCD_CD = TS.BCD_CD
			LEFT JOIN (SELECT MIN(PUR_PRICE) AS PUR_PRICE
								,BCD_CD
						FROM T_STD_MAST_PUR_PRICE
						GROUP BY BCD_CD
			) TP
			ON TCG.BCD_CD = TP.BCD_CD
			WHERE 1=1
			AND TS.ORGN_CD IN (SELECT CMMN_DETAIL_CD FROM COM_CMMN_CODE_DETAIL WHERE 1=1 AND CMMN_CD = 'ORGN_CD' AND DIV1 = 'CT')
			<if test = 'STD_PRICE_GRUP != ""'>
			AND TCG.STD_PRICE_GRUP = #{STD_PRICE_GRUP}
			</if>
			<if test = 'USE_YN != ""'>
			AND TCG.USE_YN = #{USE_YN}
			</if>
			<if test='SEARCH_WORD != ""'>
				AND (TCG.BCD_CD LIKE CONCAT('%',#{SEARCH_WORD},'%') OR TB.BCD_NM LIKE CONCAT('%',#{SEARCH_WORD},'%') OR TB.GOODS_NO LIKE CONCAT('%',#{SEARCH_WORD},'%'))
			</if>
			) T
		WHERE T.RANK = 1
		ORDER BY T.STD_PRICE_GRUP, T.CDATE DESC
	</select>
	
	<select id="getCustmrStdPriceGoodsInfo" parameterType="Map" resultType="CMap">
		/* getCustmrStdPriceGoodsInfo */
		<if test='list.size > 0'>
		SELECT MIN(TP.PUR_PRICE) AS PUR_PRICE
				,(SELECT TOP 1 STRT_DATE
					FROM T_CENT_STD_PRICE AS TC
					WHERE TC.STD_PRICE_GRUP = #{list[0].STD_PRICE_GRUP}
				) AS STRT_DATE
				,(SELECT TOP 1 CUSTMR_GRUP
					FROM T_CENT_STD_PRICE AS TC
					WHERE TC.STD_PRICE_GRUP = #{list[0].STD_PRICE_GRUP}
				) AS  CUSTMR_GRUP
				,TP.BCD_CD
				,TB.GOODS_NO
				,TB.BCD_NM
				,TB.DIMEN_NM
				,TS.SALE_PRICE
		FROM T_STD_MAST_PUR_PRICE AS TP
		INNER JOIN T_STD_MAST_BCD AS TB
		ON TP.BCD_CD = TB.BCD_CD
		LEFT JOIN T_STD_MAST_SALE_PRICE AS TS
		ON TP.BCD_CD = TS.BCD_CD
		WHERE TP.BCD_CD IN 
				<foreach collection="list" item="item" open="(" separator="," close=")">
					#{item.BCD_CD}
				</foreach>
		AND TS.ORGN_CD IN (SELECT CMMN_DETAIL_CD FROM COM_CMMN_CODE_DETAIL WHERE 1=1 AND CMMN_CD = 'ORGN_CD' AND DIV1 = 'CT')
		GROUP BY TP.BCD_CD
				,TB.GOODS_NO
				,TB.BCD_NM
				,TB.DIMEN_NM
				,TS.SALE_PRICE
		</if>
	</select>
	
	<select id="getGrupStdPrice" resultType="java.util.Map" parameterType="java.util.Map">
		/* getGrupStdPrice */
		SELECT STD_PRICE_GRUP_NM
				,STD_PRICE_GRUP
				,CUSTMR_GRUP
				,STRT_DATE
				,USE_YN
		FROM T_CENT_STD_PRICE
		WHERE ( REPLACE(#{DATE_FR},'-','') <![CDATA[<=]]> STRT_DATE AND STRT_DATE <![CDATA[<=]]> REPLACE(#{DATE_TO},'-','') )
		<if test = 'STD_PRICE_GRUP != ""'>
		AND STD_PRICE_GRUP = #{STD_PRICE_GRUP}
		</if>
		ORDER BY CDATE DESC
	</select>
	
	<select id="getGoodsStdPrice" resultType="java.util.Map" parameterType="java.util.Map">
		/* getGoodsStdPrice */
		SELECT T.STD_PRICE_GRUP
				,T.CUSTMR_GRUP
				,T.BCD_CD
				,T.BCD_NM
				,T.DIMEN_NM
				,T.GOODS_NO
				,T.STD_SALE_PRICE
				,T.SALE_PRICE
				,T.PUR_PRICE
				,ISNULL((((T.STD_SALE_PRICE - T.PUR_PRICE) / T.PUR_PRICE) * 100),0) AS PROF_RATE
				,T.TAX_YN
				,T.USE_YN
				,T.RANK
				,T.REMK
				
		FROM(
			SELECT TCG.STD_PRICE_GRUP
					,TCG.CUSTMR_GRUP
					,TCG.BCD_CD
					,TB.BCD_NM
					,TB.DIMEN_NM
					,TB.GOODS_NO
					,CAST(TCG.SALE_PRICE AS INT) STD_SALE_PRICE
					,CAST(TS.SALE_PRICE AS INT) SALE_PRICE
					,TP.PUR_PRICE
					,TCG.TAX_YN
					,TCG.USE_YN
					,TCG.REMK
					,RANK() OVER(PARTITION BY TS.ORGN_CD, TS.BCD_CD ORDER BY TS.PROF_RATE DESC) AS 'RANK'
			FROM T_CENT_STD_PRICE_GOODS AS TCG
			INNER JOIN T_STD_MAST_BCD AS TB
			ON TCG.BCD_CD = TB.BCD_CD
			LEFT JOIN T_STD_MAST_SALE_PRICE AS TS
			ON TCG.BCD_CD = TS.BCD_CD
			LEFT JOIN (SELECT MIN(PUR_PRICE) AS PUR_PRICE
								,BCD_CD
						FROM T_STD_MAST_PUR_PRICE
						GROUP BY BCD_CD
			) TP
			ON TCG.BCD_CD = TP.BCD_CD
			WHERE 1=1
			AND TS.ORGN_CD IN (SELECT CMMN_DETAIL_CD FROM COM_CMMN_CODE_DETAIL WHERE 1=1 AND CMMN_CD = 'ORGN_CD' AND DIV1 = 'CT')
			<if test = 'STD_PRICE_GRUP != ""'>
			AND TCG.STD_PRICE_GRUP = #{STD_PRICE_GRUP}
			</if>
			<if test = 'CUSTMR_GRUP != ""'>
			AND TCG.CUSTMR_GRUP = #{CUSTMR_GRUP}
			</if>
			) T
		WHERE T.RANK = 1
	</select>
	
	<select id="getStdPriceCustmrList" resultType="java.util.Map" parameterType="java.util.Map">
		/* getStdPriceCustmrList */
		SELECT CUSTMR_CD
				,CUSTMR_NM
				,CUSTMR_GRUP
				,CORP_NO
				,CONVERT(NVARCHAR(10),CDATE,120) AS CDATE
		FROM T_STD_MAST_CUSTMR
		WHERE 1=1
		<if test = 'CUSTMR_GRUP != ""'>
		AND CUSTMR_GRUP = #{CUSTMR_GRUP}
		</if>
	</select>
	
	<select id="getStdPriceGrupCdCheck" resultType="java.util.Map" parameterType="java.util.Map">
		/* getStdPriceGrupCdCheck */
		DECLARE @CUSTMR_GRUP_CD NVARCHAR(3) = #{CUSTMR_GRUP}
				, @NEW_STD_PRICE_GRUP NVARCHAR(4)

		IF EXISTS ( SELECT CUSTMR_GRUP FROM T_CENT_STD_PRICE WHERE CUSTMR_GRUP = @CUSTMR_GRUP_CD )
		BEGIN
			SELECT 
				@NEW_STD_PRICE_GRUP = CONCAT(@CUSTMR_GRUP_CD, RIGHT(STD_PRICE_GRUP,1) +1)
			FROM (
				SELECT
					CUSTMR_GRUP, STD_PRICE_GRUP
					, RANK() OVER (PARTITION BY CUSTMR_GRUP ORDER BY STD_PRICE_GRUP DESC ) AS RK
				FROM T_CENT_STD_PRICE
				GROUP BY CUSTMR_GRUP, STD_PRICE_GRUP
				HAVING CUSTMR_GRUP = @CUSTMR_GRUP_CD
			) CSP
		WHERE RK = 1
		END
		ELSE
		BEGIN
			SELECT 
				@NEW_STD_PRICE_GRUP = CONCAT(@CUSTMR_GRUP_CD, '0')
		END

		PRINT N'@NEW_STD_PRICE_GRUP : ' + @NEW_STD_PRICE_GRUP
		
		SELECT @NEW_STD_PRICE_GRUP AS STD_PRICE_GRUP
	</select>
	
	<insert id = "addGrupStdPrice" parameterType="java.util.Map">
		/* addGrupStdPrice */
		INSERT INTO T_CENT_STD_PRICE(
			CUSTMR_GRUP
			,STD_PRICE_GRUP
			,STD_PRICE_GRUP_NM
			,STRT_DATE
			,USE_YN
			,CPROGRM
			,CUSER
			,CDATE)
		VALUES(
			#{CUSTMR_GRUP}
			,#{STD_PRICE_GRUP}
			,#{STD_PRICE_GRUP_NM}
			,#{STRT_DATE}
			,#{USE_YN}
			,#{PROGRM}
			,#{USER}
			,GETDATE())
	</insert>
	
	<delete id = "deleteGrupStdPrice" parameterType="java.util.Map">
		/* deleteGrupStdPrice */
		DELETE FROM T_CENT_STD_PRICE
		WHERE CUSTMR_GRUP = #{CUSTMR_GRUP}
		AND STD_PRICE_GRUP = #{STD_PRICE_GRUP}
	</delete>
	
	<update id = "updateGrupStdPrice" parameterType="java.util.Map">
		/* updateGrupStdPrice */
		UPDATE T_CENT_STD_PRICE
		SET STD_PRICE_GRUP_NM = #{STD_PRICE_GRUP_NM}
			,STRT_DATE = #{STRT_DATE}
			,USE_YN = #{USE_YN}
			,MPROGRM = #{PROGRM}
			,MUSER = #{USER}
			,MDATE = GETDATE()
		WHERE CUSTMR_GRUP = #{CUSTMR_GRUP}
		AND STD_PRICE_GRUP = #{STD_PRICE_GRUP}
		
	</update>
	
	<select id="getStdPriceGoodsManagementInfo" parameterType="Map" resultType="CMap">
		/* getStdPriceGoodsManagementInfo */
		<if test='list.size > 0'>
		SELECT MIN(TP.PUR_PRICE) AS PUR_PRICE
				,TP.BCD_CD
				,TB.GOODS_NO
				,TB.BCD_NM
				,TB.DIMEN_NM
				,TS.SALE_PRICE
		FROM T_STD_MAST_PUR_PRICE AS TP
		INNER JOIN T_STD_MAST_BCD AS TB
		ON TP.BCD_CD = TB.BCD_CD
		LEFT JOIN T_STD_MAST_SALE_PRICE AS TS
		ON TP.BCD_CD = TS.BCD_CD
		WHERE TP.BCD_CD IN 
				<foreach collection="list" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
		AND TS.ORGN_CD IN (SELECT CMMN_DETAIL_CD FROM COM_CMMN_CODE_DETAIL WHERE 1=1 AND CMMN_CD = 'ORGN_CD' AND DIV1 = 'CT')
		GROUP BY TP.BCD_CD
				,TB.GOODS_NO
				,TB.BCD_NM
				,TB.DIMEN_NM
				,TS.SALE_PRICE
		</if>
	</select>
	
	<insert id = "addGoodsStdPrice" parameterType="java.util.Map">
		/* addGoodsStdPrice */
		INSERT INTO T_CENT_STD_PRICE_GOODS(
			CUSTMR_GRUP
			,STD_PRICE_GRUP
			,GOODS_NO
			,BCD_CD
			,SALE_PRICE
			,TAX_YN
			,USE_YN
			,REMK
			,CPROGRM
			,CUSER
			,CDATE)
		VALUES(
			#{CUSTMR_GRUP}
			,#{STD_PRICE_GRUP}
			,#{GOODS_NO}
			,#{BCD_CD}
			,#{STD_SALE_PRICE}
			,#{TAX_YN}
			,#{USE_YN}
			,''
			,#{PROGRM}
			,#{USER}
			,GETDATE())
	</insert>
	
	<delete id = "deleteGoodsStdPrice" parameterType="java.util.Map">
		/* deleteGoodsStdPrice */
		DELETE FROM T_CENT_STD_PRICE_GOODS
		WHERE CUSTMR_GRUP = #{CUSTMR_GRUP}
		AND STD_PRICE_GRUP = #{STD_PRICE_GRUP}
		AND BCD_CD = #{BCD_CD}
	</delete>
	
	<update id = "updateGoodsStdPrice" parameterType="java.util.Map">
		/* updateGoodsStdPrice */
		UPDATE T_CENT_STD_PRICE_GOODS
		SET USE_YN = #{USE_YN}
			,SALE_PRICE = #{STD_SALE_PRICE}
		WHERE CUSTMR_GRUP = #{CUSTMR_GRUP}
		AND STD_PRICE_GRUP = #{STD_PRICE_GRUP}
		AND BCD_CD = #{BCD_CD}
	</update>
	
	<insert id = "addCustmrStdPrice" parameterType="java.util.Map">
		/* addCustmrStdPrice */
		DECLARE @CUSTMR_GRUP NVARCHAR(5)
		
		SET @CUSTMR_GRUP = LEFT(#{STD_PRICE_GRUP},3)
		
		INSERT INTO T_CENT_STD_PRICE_GOODS(
			CUSTMR_GRUP
			,STD_PRICE_GRUP
			,GOODS_NO
			,BCD_CD
			,SALE_PRICE
			,TAX_YN
			,USE_YN
			,REMK
			,CPROGRM
			,CUSER
			,CDATE)
		VALUES(
			@CUSTMR_GRUP
			,#{STD_PRICE_GRUP}
			,#{GOODS_NO}
			,#{BCD_CD}
			,#{STD_SALE_PRICE}
			,#{TAX_YN}
			,#{USE_YN}
			,''
			,#{PROGRM}
			,#{USER}
			,GETDATE())
	</insert>
	
	<delete id = "deleteCustmrStdPrice" parameterType="java.util.Map">
		/* deleteCustmrStdPrice */
		DECLARE @CUSTMR_GRUP NVARCHAR(5)
		
		SET @CUSTMR_GRUP = LEFT(#{STD_PRICE_GRUP},3)
		
		DELETE FROM T_CENT_STD_PRICE_GOODS
		WHERE CUSTMR_GRUP = @CUSTMR_GRUP
		AND STD_PRICE_GRUP = #{STD_PRICE_GRUP}
		AND BCD_CD = #{BCD_CD}
	</delete>
	
	<update id = "updateCustmrStdPrice" parameterType="java.util.Map">
		/* updateCustmrStdPrice */
		DECLARE @CUSTMR_GRUP NVARCHAR(5)
		
		SET @CUSTMR_GRUP = LEFT(#{STD_PRICE_GRUP},3)
		
		UPDATE T_CENT_STD_PRICE_GOODS
		SET USE_YN = #{USE_YN}
			,SALE_PRICE = #{STD_SALE_PRICE}
		WHERE CUSTMR_GRUP = @CUSTMR_GRUP
		AND STD_PRICE_GRUP = #{STD_PRICE_GRUP}
		AND BCD_CD = #{BCD_CD}
	</update>
	
	<select id="getCustmrStdPriceLookUp" resultType="java.util.Map" parameterType="java.util.Map">
		/* getCustmrStdPriceLookUp */
		SELECT * FROM(
			SELECT 
				TC.STD_PRICE_GRUP_NM
				,TCG.BCD_CD
				,TB.BCD_NM
				,TB.GOODS_NO
				,CAST(TCG.SALE_PRICE AS INT) STD_SALE_PRICE
			FROM T_CENT_STD_PRICE_GOODS AS TCG
			INNER JOIN T_CENT_STD_PRICE AS TC
			ON TCG.CUSTMR_GRUP = TC.CUSTMR_GRUP
			AND TCG.STD_PRICE_GRUP = TC.STD_PRICE_GRUP
			INNER JOIN T_STD_MAST_BCD AS TB
			ON TCG.BCD_CD = TB.BCD_CD
			AND TCG.USE_YN = 'Y'
			<if test='SEARCH_WORD != ""'>
				AND (TCG.BCD_CD LIKE CONCAT('%',#{SEARCH_WORD},'%') OR TB.BCD_NM LIKE CONCAT('%',#{SEARCH_WORD},'%') OR TB.GOODS_NO LIKE CONCAT('%',#{SEARCH_WORD},'%'))
			</if>
			) AS A
		PIVOT( MAX(A.STD_SALE_PRICE) FOR A.STD_PRICE_GRUP_NM IN (${CUSTMR_GRUP_LIST}) ) AS PVT
	</select>
</mapper>
